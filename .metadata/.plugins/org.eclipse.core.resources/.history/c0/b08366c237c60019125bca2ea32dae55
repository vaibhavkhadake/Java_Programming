package com.bridgelabzs.utility;
import java.util.Arrays;
import java.util.Scanner;
/******************************************************************************
 *  
 *  Purpose: It is a utility class where we written all progams logic.
 *
 *  @author  Vaibhav P Khadake
 *  @version 1.0
 *  @since   22-08-2019
 *
 ******************************************************************************/



public class Utility {

	/**
	 * Taking values from user
	 */
	static Scanner scanner =  new Scanner(System.in);
	/**
	 * 
	 * @return integer value
	 */
	public static int integerInput()
	{
		int integerValue = scanner.nextInt();
		return integerValue;
	}
	/**
	 * @return double value
	 */
	public static double doubleInput()
	{
		double doubleValue= scanner.nextDouble();
		return doubleValue;
	}
	
	/**
	 * 
	 * @return stringvalue
	 */
	public static String stringInput() 
	{
		String stringValue=scanner.nextLine();
		return stringValue;
		
	}
	/**
	 * 
	 * @param newString
	 */
	public static void inputString(String newString) 
	{
		String input="“Hello <<UserName>>, How are you?”";
		String replaceString=input.replace( "<<UserName>>", newString);
		System.out.println(input);
		System.out.println(replaceString);	
	}
	
	/**
	 * 
	 * @param coin
	 */
	public static void coin(int coin) {
		int head=0,tail=0;
		for(int i=1;i<=coin;i++)
		{
			if(Math.random()<0.5)
			{
				head++;
			}		
			else
			{
				tail++;
			}
		}
		System.out.println("Head="+head);
		System.out.println("tail="+tail);
		
		//calculate percentage
		double headPercentage=(head*100)/coin;
		double tailPercentage=(tail*100)/coin;
		System.out.println("headPercentage= "+headPercentage);
		System.out.println("tailPercentage= "+tailPercentage);
		
	}
	/**
	 * 
	 * @param year
	 */
	public static void leapYear(int year) 
	{
		if(year>=1582)
		{
			if(year%400==0)
				System.out.println("Leap year");		
			else if(year%100==0)
				System.out.println("Not a Leap year");
			else if(year%4==0)
				System.out.println("Leap year");
			else
				System.out.println("Not a Leap year");
		}
		else
			System.out.println("Plese enter valid year");
		}
	/**
	 * 
	 * @param number
	 */

	public static void power(int number)
	{
		for(int i=1;i<=number;i++)
		{
		int power=(int)Math.pow(i, 2);
		System.out.println(power);
		}	
	}
	/**
	 * 
	 * @param harmonic number
	 */
	public static void harmonic(int number) 
	{
		double harmonicNumber=1;
		for(double i=2;i<=number;i++)
		{
			harmonicNumber=harmonicNumber+(1/i);	
		}
		System.out.println("Sum of harmonic series "+harmonicNumber);
	}
	/**
	 * 
	 * @param number
	 */
	public static void prime_fact(int number) 
	{
		for(int i = 2; i*i<= number; i++)
		{
	         while(number%i == 0) 
	         {
	            System.out.print(i+" * ");
	            number = number/i;
	         }
	     }
	      if(number >2) 
	         System.out.println(number);
	}
	/**
	 * 
	 * @param stake
	 * @param goal
	 * @param trails
	 */
	public static void gamling(double stake, double goal, double trails)
	{
		int bets=0,wins=0;
		for(int i=0;i<trails;i++)
		{
		double cash=stake;
			while(cash>0 && cash<goal)
			{
				bets++;
				if(Math.random()<0.5)
					cash++;// win $1
				else
					cash--;//for loss $1
				if (cash == goal)
					wins++;
			}//while loop end
		}//for loop end
		System.out.println("Numbers of win= "+wins+" out of "+trails);
		System.out.println("Percentage of win ratio= "+wins*100/trails);
		System.out.println("average of bets= "+(1*bets/trails));
	}
	/**
	 * 
	 * @param a
	 * @param b
	 * @param c
	 */
	public void quadratic(double a, double b, double c)
	{
		double delta=b*b-4*a*c;
		 System.out.println("Delta ="+delta); 
		 double root1,root2;
		 if(delta>0)
		 {
		  root1=(-b+ Math.sqrt(delta))/(2*a);
		  System.out.println("Root 1 ="+root1);
		  
		  root2=(-b- Math.sqrt(delta))/(2*a);
		  System.out.println("Root 2 ="+root2);;
		 }
		 else if(delta==0)
		 {
			 root1=-b/(2*a);
			 System.out.println("Root 1 ="+root1);
			
			 root2=-b/(2*a);
			 System.out.println("Root 2 ="+root2);;
		 }
		 // if delta<0 
		 else
		 {
			 double realPart = -b / (2 *a);
	         double imaginaryPart = Math.sqrt(-delta) / (2 * a);
	         
	         System.out.println("realPart="+realPart+"\n ImaginaryPart"+imaginaryPart);   
		 }
	}
	/**
	 * 
	 * @param temperature
	 * @param wind_speed
	 */
	public void windchil(double temperature, double wind_speed)
	{
		System.out.println("Temperature"+temperature);
		System.out.println("Wind speed"+wind_speed);
		double wind_chill = 35.74 + 0.6215*temperature + (0.4275*temperature - 35.75) * Math.pow(wind_speed, 0.16);
		System.out.println("Wind_Chill"+wind_chill);
		
	}
	/**
	 * 
	 * @param string1
	 * @param string2
	 */
	
	public static void anagram(String string1, String string2) 
	{
		// convert string to character
		char[] ch1=string1.toCharArray(); 
		char[] ch2=string2.toCharArray(); 
		boolean anagram = true;  
		//sort the elements 
		Arrays.sort(ch1);
		Arrays.sort(ch2);
		
		//compare elements
		anagram=Arrays.equals(ch1, ch2); 
		
		if(anagram)
		{
			System.out.println("String is anagrams");
		}
		else
		{
			System.out.println("String is not anagrams");
		}
		return;
		
	}
	/**
	 * 
	 * @param number
	 * @return
	 */
	public static boolean palindrom(int number) {
		int temp=number;
		int add=0;
		int reminder;
		while(number>=2)
		{
			reminder=number%10;
			add=(add*10)+reminder;
			number=number/10;
		} 
		if(temp==add)
			System.out.println("Palindom");
		else
			System.out.println("Not Palindrom");	
		return false;
		
	}
	

}
